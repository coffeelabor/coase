Procedure Play;
var
  I,J,K,L,M : Integer;
  A : Agent;
begin
  Shuffle(PGoods,NumGoods);
  for I := 1 to NumGoods do Shuffle(PAgents[PGoods[I]],NumAgents[PGoods[I]]);
  for I := 1 to NumGoods do begin
    for J := 1 to NumAgents[PGoods[I]] do begin
      A := Agents[PGoods[I],PAgents[PGoods[I],J]];
      Assert(Assigned(A));
      for K := 1 to NumGoods do begin
        if A.Buy[PGoods[K]] > 0 then begin
          for L := 1 to MaxTries do begin
            M := 1 + Random(NumAgents[PGoods[K]]);
            if A.Trade(Agents[PGoods[K],M]) then begin
              A.Eat;
              A.SetDemandAndSupply;
              Agents[PGoods[K],M].Eat;
              Agents[PGoods[K],M].SetDemandAndSupply;
//              Break;
            end;
          end;
        end;
      end;
    end;
  end;
end;
