Procedure GoodsPlay;
var
  I,J,K,L,M : Integer;
  A : Agent;
begin
  Shuffle(PGoods,NumGoods);
  for I := 1 to NumGoods do Shuffle(PAgents[PGoods[I]],NumAgents[PGoods[I]]);
  for I := 1 to NumGoods do begin
    for J := 1 to NumAgents[PGoods[I]] do begin
      A := AgentsF[PGoods[I],PAgents[PGoods[I],J]];
      Assert(Assigned(A));
        for M := 1 to MaxGoodsSearch do begin
        L = 1 + Random(NumAgentsH);
          if AgentsH[L].X[A.Produces] := 0 && 
            AgentsH[L].Income > (AgentsH[L].P[A.Produces] + A.Q[Produces])/2 then begin
              AgentsH[L].X[A.Produces] = 1
              AgentsH[L].Income := AgentsH[L].Income - (AgentsH[L].P[A.Produces] + A.Q[Produces])/2;
              AgentsH[L].Score := AgentsH[L].Score + OX[A.Produces]/((AgentsH[L].P[A.Produces] + A.Q[Produces])/2);
              A.Y[Produces] := 0;
              A.Profit := A.Profit + (AgentsH[L].P[A.Produces] + A.Q[Produces])/2;
              Break;             
            end;
          end;
        end;
      end;
    end;
  end;
end;
